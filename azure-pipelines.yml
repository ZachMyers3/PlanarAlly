# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  tags:
    include:
      - "*"

jobs:
  - job: "Pyinstaller_Windows"
    pool:
      vmImage: "vs2017-win2016"

    steps:
      - script: npm install
        workingDirectory: "client"
        displayName: "npm i"
      - script: npm run build
        workingDirectory: "client"
        displayName: "npm run build"

      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.7"
          architecture: "x64"

      - script: python -m pip install --upgrade pip && pip install -r requirements.txt
        displayName: "Install dependencies"
        workingDirectory: "server"

      - script: pip install pyinstaller
        displayName: "Install pyinstaller"

      - script: pyinstaller --clean -y --dist $(Build.ArtifactStagingDirectory)\windows --workpath D:\ PA.spec
        displayName: "Run pyinstaller"
        workingDirectory: "server"

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: $(Build.ArtifactStagingDirectory)\windows\planarserver
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: '$(Build.ArtifactStagingDirectory)\planarally-windows.zip'

      - task: GitHubRelease@0
        inputs:
          gitHubConnection: Kruptein
          action: "create"
          assets: '$(Build.ArtifactStagingDirectory)\planarally-windows.zip'
          assetsUploadMode: "replace"
          addChangeLog: false
